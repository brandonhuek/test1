
import streamlit as st
from io import BytesIO
from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
from reportlab.lib.units import cm
from reportlab.lib.utils import ImageReader
import base64
from PIL import Image

logo_base64 = """"""

st.set_page_config(page_title="Presupuesto personalizado Innovation Crafters", layout="centered")
st.image("logo_innovation_crafters.png", width=200)
st.title("Presupuesto personalizado Innovation Crafters")

lang = st.sidebar.selectbox("🌐 Idioma / Language", ["Español", "English"])
texts = {
    "Español": {
        "client_data": "🧾 Datos del cliente",
        "product_info": "📦 Detalles del producto",
        "upload_photos": "📸 Muéstranos tu producto para empaquetar (hasta 4 imágenes)",
        "estimated_days": "Días de producción estimada",
        "download": "Descargar presupuesto",
        "recargo_eq": "¿Recargo de equivalencia (5,2%)?",
        "yes": "Sí",
        "no": "No"
    },
    "English": {
        "client_data": "🧾 Client Information",
        "product_info": "📦 Product Details",
        "upload_photos": "📸 Show us your product to pack (up to 4 images)",
        "estimated_days": "Estimated Production Days",
        "download": "Download Quote",
        "recargo_eq": "Equivalence surcharge (5.2%)?",
        "yes": "Yes",
        "no": "No"
    }
}
t = texts[lang]

# Datos del cliente
st.header(t["client_data"])
nombre = st.text_input("Nombre / Name")
empresa = st.text_input("Empresa / Company")
direccion = st.text_input("Dirección / Address")
telefono = st.text_input("Teléfono / Phone")
email = st.text_input("Email")
cif = st.text_input("CIF / VAT ID")
observaciones = st.text_area("Observaciones / Notes")

# Producto
st.header(t["product_info"])
modalidad = st.selectbox("Modalidad", ["Standard", "Premium", "Platino"])
formato_bolsa = st.multiselect("Selecciona los formatos de bolsa que deseas combinar", ["1g", "2g", "3g", "5g", "10g", "20g", "50g", "100g"])
kg = st.number_input("Kg a empaquetar", min_value={"Standard": 3.0, "Premium": 2.0, "Platino": 0.5}[modalidad], value={"Standard": 3.0, "Premium": 2.0, "Platino": 0.5}[modalidad], step=0.1)

tipo_envio = st.radio(t["estimated_days"], ["Standard (3-5 días hábiles + transporte)", "Express (3 días hábiles + transporte)"])
recargo_eq = st.selectbox(t["recargo_eq"], [t["no"], t["yes"]])
imagenes = st.file_uploader("Sube tus imágenes", type=["png", "jpg", "jpeg"], accept_multiple_files=True)

# Precios
coste_bolsa_unitario = {
    "1g": 0.45, "2g": 0.45, "3g": 0.45,
    "5g": 0.50, "10g": 0.50, "20g": 0.50,
    "50g": 0.65, "100g": 0.65
}
mano_obra_precio = {"Standard": 300, "Premium": 275, "Platino": 300}

# Calcular número total de gramos
total_gramos = kg * 1000
gr_formato = [int(f.replace("g", "")) for f in formato_bolsa]
num_bolsas_total = 0
coste_bolsas_total = 0.0

# Solo calcular si modalidad requiere cobro de bolsas
if modalidad in ["Standard", "Platino"] and formato_bolsa:
    gramos_restantes = total_gramos
    for gr in sorted(gr_formato):
        if gramos_restantes <= 0:
            break
        bolsas_usadas = int(gramos_restantes // gr)
        gramos_restantes -= bolsas_usadas * gr
        precio_unit = coste_bolsa_unitario[f"{gr}g"]
        num_bolsas_total += bolsas_usadas
        coste_bolsas_total += bolsas_usadas * precio_unit

if modalidad == "Premium":
    coste_bolsas_total = 0

precio_mano_obra = mano_obra_precio[modalidad] * kg
envio = 50 * kg if "Express" in tipo_envio else 5
precio_base = precio_mano_obra + coste_bolsas_total + envio
recargo = 0.052 * precio_base if recargo_eq == t["yes"] else 0
iva = 0.21 * (precio_base + recargo)
total = precio_base + recargo + iva

st.markdown(f"**Total estimado: {total:.2f} € (IVA incluido)**")

# Generar PDF
def generar_pdf():
    buffer = BytesIO()
    c = canvas.Canvas(buffer, pagesize=A4)
    width, height = A4

    try:
        logo_img = ImageReader(BytesIO(base64.b64decode(logo_base64)))
        c.drawImage(logo_img, 2 * cm, height - 3 * cm, width=4 * cm, preserveAspectRatio=True)
    except:
        pass

    c.setFont("Helvetica", 10)
    y = height - 4.5 * cm
    for line in [
        f"Nombre: {nombre}", f"Empresa: {empresa}", f"Dirección: {direccion}",
        f"Teléfono: {telefono}", f"Email: {email}", f"CIF: {cif}", f"Observaciones: {observaciones}",
        f"Modalidad: {modalidad}", f"Kg: {kg}", f"Formatos: {', '.join(formato_bolsa)}",
        f"Bolsas estimadas: {num_bolsas_total}", f"Coste bolsas: {coste_bolsas_total:.2f} €",
        f"Mano de obra: {precio_mano_obra:.2f} €", f"Envío: {envio:.2f} €",
        f"Recargo: {recargo:.2f} €", f"IVA: {iva:.2f} €", f"TOTAL: {total:.2f} €"
    ]:
        c.drawString(2 * cm, y, line)
        y -= 0.45 * cm

    y -= 0.3 * cm
    for line in [
        "Inversiones Brandon e Hijos SL",
        "Calle Anselm Clavé 7, 17300, Blanes, Gerona",
        "CIF: B42761262",
        "IBAN: ESXX XXXX XXXX XXXX XXXX XXXX",
        "Pago: 60% por adelantado, 40% al salir el producto"
    ]:
        c.drawString(2 * cm, y, line)
        y -= 0.4 * cm

    c.showPage()
    c.save()
    buffer.seek(0)
    return buffer

if st.button(t["download"]):
    pdf = generar_pdf()
    st.download_button(label="📄 Descargar PDF", data=pdf, file_name="presupuesto_innovation_crafters.pdf")
